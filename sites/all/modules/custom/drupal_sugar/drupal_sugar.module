<?php

module_load_include('php', 'drupal_sugar', 'SugarRestClient');
module_load_include('php', 'drupal_sugar', 'SugarMetadata');
module_load_include('inc', 'drupal_sugar', 'drupal_sugar_db_functions');

/**
 * Implements hook_menu()
 *
 * Add menu option to Config - Services
 *
 * @return array
 */
function drupal_sugar_menu()
{
    $items = array();

    // Settings link from config menu
    $items['admin/config/services/sugar'] = array(
        'title' => 'SugarCRM API Settings',
        'description' => t('Configure SugarCRM API settings'),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('drupal_sugar_settings_form'),
        'access arguments' => array('administer site configuration'),
        'file' => 'drupal_sugar_settings_form.inc',
    );

    // AJAX entry point to test connection
    $items['admin/config/services/sugar/test'] = array(
        'page callback' => 'drupal_sugar_test_connection_ajax',
        'type' => MENU_CALLBACK,
        'access arguments' => array('administer site configuration'),
        'file' => 'drupal_sugar_test_connection_ajax.inc',
    );

    return $items;
}


/**
 * Implements hook_form_FORM_ID_alter()
 *
 * Add an option to select the Sugar module we wil post the data to
 *
 * @param $form
 * @param $form_state
 * @param $form_id
 */
function drupal_sugar_form_webform_node_form_alter(&$form, &$form_state, $form_id)
{
    if (!isset($_SESSION['drupal_sugar_metadata']) || empty($_SESSION['drupal_sugar_metadata'])) {
        $sugar = new SugarRestClient();
        $metadata = $sugar->get_sugar_metadata();
        $metadata['modules'] = SugarMetadata::filter_module_metadata($metadata['modules']);
        $_SESSION['drupal_sugar_metadata'] = $metadata;
    }

    $metadata = $_SESSION['drupal_sugar_metadata'];

    $options = array();
    foreach ($metadata['modules'] as $module_name => $module_metadata) {
        // @todo get the module label
        $options[$module_name] = t('@module_name', array('@module_name' => $module_name));
    }
    $options[''] = '';  // add a blank option at the start
    ksort($options);

    $default_value = '';
    if (isset($form['nid']['#value']) && $form['nid']['#value'] != NULL) {
        $result = drupal_sugar_module_fetch($form['nid']['#value']);
        $default_value = $result['sugar_module'];
    }


    $form['drupal_sugar'] = array(
        '#type' => 'fieldset',
        //'#access' => user_access('administer comments'),
        '#title' => t('SugarCRM module'),
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
        '#group' => 'additional_settings',
        '#weight' => 100, // place it at the end
        '#attributes' => array(
            'class' => array('sugar-module-form'),
        ),
        '#attached' => array(
            'js' => array(drupal_get_path('module', 'drupal_sugar') . '/drupal_sugar_module.js'),
        ),
    );

    $form['drupal_sugar']['sugar_module'] = array(
        '#type' => 'select',
        '#title' => t('Module'),
        '#description' => t("Specifiy the SugarCRM module this data is to be sent to"),
        '#options' => $options,
        '#default_value' => $default_value,
    );

    $form['actions']['submit']['#submit'][] = 'drupal_sugar_set_sugar_module';
}


/**
 * Implements hook_form_FORM_ID_alter()
 *
 * Add the Sugar field name option to the form edit
 *
 * @param $form
 * @param $form_state
 * @param $form_id
 */
function drupal_sugar_form_webform_component_edit_form_alter(&$form, &$form_state, $form_id)
{
    // We only need the fields if a Sugar module has been specified
    $sugar_enabled = FALSE;

    // prepare the dropdown list of field names
    $options = array();
    // check which (if any) sugar module is used in this webform
    $results = drupal_sugar_module_fetch($form['nid']['#value']);
    if (isset($results['sugar_module']) && !empty($results['sugar_module'])) {
        $sugar_enabled = TRUE;
        $module_metatdata = $_SESSION['drupal_sugar_metadata']['modules'][$results['sugar_module']];
        $module_metatdata['fields'] = SugarMetadata::filter_field_list($module_metatdata['fields']);
        foreach ($module_metatdata['fields'] as $field_name => $defs) {
            if (is_array($module_metatdata['fields'][$field_name])) {
                $options[$field_name] = t('@field_name', array('@field_name' => $field_name));
            }
        }
    }
    $options[''] = ''; // add a blank option
    ksort($options);


    $default_value = '';
    $node = $form['#node'];
    $form_key = isset($form['form_key']['#default_value']) ? $form['form_key']['#default_value'] : '';

    if ($sugar_enabled && !empty($form_key)) {
        $results = drupal_sugar_field_fetch($node->nid, $form_key);
        $default_value = isset($results['sugar_field']) ? $results['sugar_field'] : '';
    }

    $empty_description = '';
    if (!$sugar_enabled) {
        $empty_description = t('No SugarCRM module set for this webform');
    }

    $form['drupal_sugar'] = array(
        '#type' => 'fieldset',
        //'#access' => user_access('administer comments'),
        '#title' => t('SugarCRM field'),
        '#collapsible' => TRUE,
        '#collapsed' => !$sugar_enabled,
        //'#group' => 'additional_settings',
        '#description' => $empty_description,
        '#weight' => 50,
    );

    if ($sugar_enabled) {
        $form['drupal_sugar']['sugar_field'] = array(
            '#type' => 'select',
            '#title' => t('Field Name'),
            '#description' => t("Specifiy the SugarCRM field name.  You can find the field name in SugarCRM using Studio editor."),
            '#options' => $options,
            '#default_value' => $default_value,
            '#weight' => -1,
        );

        $form['#submit'][] = 'drupal_sugar_set_sugar_field';
    }
}


/**
 * Implements hook_form_FORM_ID_alter()
 *
 * Adds "Send to Sugar" setting
 *
 * @param $form
 * @param $form_state
 * @param $form_id
 */
function drupal_sugar_form_webform_configure_form_alter(&$form, &$form_state, $form_id)
{
    // We only need the fields if a Sugar module has been specified
    $sugar_enabled = FALSE;

    // check if any sugar module is used in this webform
    $results = drupal_sugar_module_fetch($form['nid']['#value']);
    if (isset($results['sugar_module']) && !empty($results['sugar_module'])) {
        $sugar_enabled = TRUE;
    }

    // fetch the default value
    $default_value = 0;
    $result = drupal_sugar_send_submissions_fetch($form['nid']['#value']);
    if ($result && $result['sugar_submission'] == 1) {
        $default_value = 1;
    }

    $empty_description = '';
    if (!$sugar_enabled) {
        $empty_description = t('No SugarCRM module set for this webform');
    }

    $form['drupal_sugar'] = array(
        '#type' => 'fieldset',
        //'#access' => user_access('administer comments'),
        '#title' => t('SugarCRM submission'),
        '#collapsible' => TRUE,
        '#collapsed' => !$sugar_enabled,
        //'#group' => 'additional_settings',
        '#description' => $empty_description,
        '#weight' => 50,
    );

    if ($sugar_enabled) {
        $form['drupal_sugar']['sugar_submission'] = array(
            '#type' => 'checkbox',
            '#title' => t("Send submissions to SugarCRM"),
            '#default_value' => $default_value,
            '#weight' => -1,
        );

        $form['#submit'][] = 'drupal_sugar_set_sugar_submissions';
    }
}

/**
 * Custom submit function to add Sugar module to webform
 *
 * @param $form
 * @param $form_state
 */
function drupal_sugar_set_sugar_module($form, &$form_state)
{
    if ($form['#form_id'] == 'webform_node_form') {
        // need to check if this is an insert or update
        $update = FALSE;
        $values = $form_state['values'];
        $nid = (isset($values['nid']) && $values['nid'] != NULL) ? $values['nid'] : NULL;
        $sugar_module = (isset($values['sugar_module'])) ? $values['sugar_module'] : '';


        $result = drupal_sugar_module_fetch($nid);
        if ($result) { // return FALSE if nothing found
            $update = TRUE;
        }


        // update regardless of sugar_module value
        if ($update) {
            drupal_sugar_module_update($result['id'], $result['nid'], $sugar_module);
        }

        // only insert if a module is specified
        if (!$update && !empty($sugar_module)) {
            drupal_sugar_module_insert($nid, $sugar_module);
        }
    }
}

/**
 * Custom submit function to add sugar field to webform componenet
 *
 * @todo handle changing form_key values - why is cid no unique?? (it's unique to the form!)
 *
 * @param $form
 * @param $form_state
 */
function drupal_sugar_set_sugar_field($form, &$form_state)
{
    if ($form['#form_id'] == 'webform_component_edit_form') { // not sure I need this
        // need to check if this is an insert or update
        $update = FALSE;
        $values = $form_state['values'];
        $nid = (isset($values['nid']) && $values['nid'] != NULL) ? $values['nid'] : NULL;
        $form_key = $values['form_key'];
        $sugar_field = (isset($values['drupal_sugar']['sugar_field'])) ? $values['drupal_sugar']['sugar_field'] : '';


        $result = drupal_sugar_field_fetch($nid, $form_key);
        if ($result) { // return FALSE if nothing found
            $update = TRUE;
        }


        // update regardless of sugar_field value
        if ($update) {
            drupal_sugar_field_update($result['id'], $result['nid'], $form_key, $sugar_field);
        }

        // only insert if a module is specified
        if (!$update && !empty($sugar_field)) {
            drupal_sugar_field_insert($nid, $form_key, $sugar_field);
        }
    }
}


function drupal_sugar_set_sugar_submissions($form, &$form_state)
{
    if ($form['#form_id'] == 'webform_configure_form') {
        // need to check if this is an insert or update
        $update = FALSE;
        $values = $form_state['values'];
        $nid = (isset($values['nid']) && $values['nid'] != NULL) ? $values['nid'] : NULL;
        $sugar_submission = (isset($values['sugar_submission'])) ? $values['sugar_submission'] : 0;


        $result = drupal_sugar_send_submissions_fetch($nid);
        if ($result) { // return FALSE is nothing fund
            $update = TRUE;
        }


        // update regardless of sugar_submission value
        if ($update) {
            drupal_sugar_send_submissions_update($result['id'], $result['nid'], $sugar_submission);
        }

        // otherwise insert
        if (!$update) {
            drupal_sugar_send_submissions_insert($nid, $sugar_submission);
        }
    }
}


function drupal_sugar_webform_component_delete($component)
{
    $var = 5;
    // Delete a record in a 3rd-party module table when a component is deleted.
//    db_delete('mymodule_table')
//        ->condition('nid', $component['nid'])
//        ->condition('cid', $component['cid'])
//        ->execute();
}


/**
 * Implements hook_webform_submission_insert()
 *
 * @todo find a more efficient manner to get the sugar fields
 *
 * @param $node
 * @param $submission
 */
function drupal_sugar_webform_submission_insert($node, $submission)
{
    $send = FALSE;
    $results = drupal_sugar_send_submissions_fetch($node->nid);
    if ($results && $results['sugar_submission'] == 1) {
        $send = TRUE;
    }

    if ($send) {
        // get the sugar module for this form - if any
        $results = drupal_sugar_module_fetch($node->nid);
        if ($results) {
            $module = $results['sugar_module'];
            // fetch the sugar fields
            $form_keys = array();
            $components = $node->webform['components'];
            // build a list for form keys
            foreach ($components as $cid => $component) {
                $form_keys[] = $component['form_key'];
            }
            // get the corresponding sugar fields for these form keys and this node
            $results = drupal_sugar_fields_fetch($node->nid, $form_keys);
            if ($results) {
                // we have sugar module and fields
                // prepare the data to send to sugar
                $sugar = new SugarRestClient();
                $data = array();
                foreach ($results as $sugar_field) {
                    // confirm the form key, or can we pluck iy using cid?
                    $value = '';
                    foreach ($components as $cid => $component) {
                        if ($component['form_key'] == $sugar_field->form_key) {
                            // @todo handle multiple values
                            $value = $submission->data[$cid][0]; // pretty sure we're using cid as the key here...
                            break;
                        }
                    }
                    $data[$sugar_field->sugar_field] = $value;
                }

                $sugar->create($module, $data);
            }
        }
    }
}


function drupal_sugar_delete_sugar_module($form, &$form_state)
{
    $var = 5;
}


function drupal_sugar_delete($node)
{
    $var = 5;
    drupal_sugar_module_delete($node->nid);
    //db_delete('mytable')->condition('nid', $node->nid)->execute();
}


